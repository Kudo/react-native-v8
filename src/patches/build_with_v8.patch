diff --git a/ReactAndroid/build.gradle b/ReactAndroid/build.gradle
index e73b2b4..a3c1319 100644
--- a/ReactAndroid/build.gradle
+++ b/ReactAndroid/build.gradle
@@ -190,6 +190,33 @@ task prepareJSC {
         }
     }
 }
+
+task prepareV8 {
+    doLast {
+        def v8PackagePath = findNodeModulePath(projectDir, "v8-android-jit")
+        if (!v8PackagePath) {
+            throw new GradleScriptException("Could not find the v8-android-jit npm package")
+        }
+
+        def v8Dist = file("$v8PackagePath/dist")
+        if (!v8Dist.exists()) {
+            throw new GradleScriptException("The v8-android-jit npm package is missing its \"dist\" directory")
+        }
+
+        def v8AAR = fileTree(v8Dist).matching({ it.include "**/v8-android/**/*.aar" }).singleFile
+        def soFiles = zipTree(v8AAR).matching({ it.include "**/*.so" })
+        def headerFiles = fileTree(v8Dist).matching({ it.include "**/include/**" })
+
+        copy {
+            from(soFiles)
+            from(headerFiles)
+            from("src/main/jni/third-party/v8/Android.mk")
+            includeEmptyDirs(false)
+            into("$thirdPartyNdkDir/v8")
+        }
+    }
+}
+
 task downloadNdkBuildDependencies {
     if (!boostPath) {
         dependsOn(downloadBoost)
@@ -298,7 +325,7 @@ def getNdkBuildFullPath() {
 }
 
 def buildReactNdkLib = tasks.register("buildReactNdkLib", Exec) {
-    dependsOn(prepareJSC, prepareHermes, prepareBoost, prepareDoubleConversion, prepareFolly, prepareGlog, extractAARHeaders, extractJNIFiles)
+    dependsOn(prepareJSC, prepareHermes, prepareV8, prepareBoost, prepareDoubleConversion, prepareFolly, prepareGlog, extractAARHeaders, extractJNIFiles)
     dependsOn("generateCodegenArtifactsFromSchema");
 
     inputs.dir("$projectDir/../ReactCommon")
@@ -342,6 +369,7 @@ def packageReactNdkLibs = tasks.register("packageReactNdkLibs", Copy) {
     into("$buildDir/react-ndk/exported")
     exclude("**/libjsc.so")
     exclude("**/libhermes.so")
+    exclude("**/libv8android.so")
 }
 
 def packageReactNdkLibsForBuck = tasks.register("packageReactNdkLibsForBuck", Copy) {
diff --git a/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java b/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
index c06f71b..4018041 100644
--- a/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
+++ b/ReactAndroid/src/main/java/com/facebook/react/ReactInstanceManagerBuilder.java
@@ -30,6 +30,8 @@ import com.facebook.react.modules.core.DefaultHardwareBackBtnHandler;
 import com.facebook.react.packagerconnection.RequestHandler;
 import com.facebook.react.uimanager.UIImplementationProvider;
 import com.facebook.soloader.SoLoader;
+import com.facebook.v8.reactexecutor.V8ExecutorFactory;
+import com.facebook.v8.reactexecutor.V8RuntimeConfig;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Map;
@@ -274,7 +276,7 @@ public class ReactInstanceManagerBuilder {
         mCurrentActivity,
         mDefaultHardwareBackBtnHandler,
         mJavaScriptExecutorFactory == null
-            ? getDefaultJSExecutorFactory(appName, deviceName, mApplication.getApplicationContext())
+            ? getDefaultJSExecutorFactory(appName, deviceName, mApplication.getApplicationContext(), mUseDeveloperSupport)
             : mJavaScriptExecutorFactory,
         (mJSBundleLoader == null && mJSBundleAssetUrl != null)
             ? JSBundleLoader.createAssetLoader(
@@ -298,41 +300,8 @@ public class ReactInstanceManagerBuilder {
   }
 
   private JavaScriptExecutorFactory getDefaultJSExecutorFactory(
-      String appName, String deviceName, Context applicationContext) {
-    try {
-      // If JSC is included, use it as normal
-      initializeSoLoaderIfNecessary(applicationContext);
-      SoLoader.loadLibrary("jscexecutor");
-      return new JSCExecutorFactory(appName, deviceName);
-    } catch (UnsatisfiedLinkError jscE) {
-      // https://github.com/facebook/hermes/issues/78 shows that
-      // people who aren't trying to use Hermes are having issues.
-      // https://github.com/facebook/react-native/issues/25923#issuecomment-554295179
-      // includes the actual JSC error in at least one case.
-      //
-      // So, if "__cxa_bad_typeid" shows up in the jscE exception
-      // message, then we will assume that's the failure and just
-      // throw now.
-
-      if (jscE.getMessage().contains("__cxa_bad_typeid")) {
-        throw jscE;
-      }
-
-      // Otherwise use Hermes
-      try {
-        return new HermesExecutorFactory();
-      } catch (UnsatisfiedLinkError hermesE) {
-        // If we get here, either this is a JSC build, and of course
-        // Hermes failed (since it's not in the APK), or it's a Hermes
-        // build, and Hermes had a problem.
-
-        // We suspect this is a JSC issue (it's the default), so we
-        // will throw that exception, but we will print hermesE first,
-        // since it could be a Hermes issue and we don't want to
-        // swallow that.
-        hermesE.printStackTrace();
-        throw jscE;
-      }
-    }
+      String appName, String deviceName, Context applicationContext, boolean useDeveloperSupport) {
+    // initializeSoLoaderIfNecessary(applicationContext);
+    return new V8ExecutorFactory(appName, deviceName, useDeveloperSupport);
   }
 }
diff --git a/ReactAndroid/src/main/jni/react/jni/Android.mk b/ReactAndroid/src/main/jni/react/jni/Android.mk
index 8b24a2f..3eeb54a 100644
--- a/ReactAndroid/src/main/jni/react/jni/Android.mk
+++ b/ReactAndroid/src/main/jni/react/jni/Android.mk
@@ -127,6 +127,8 @@ $(call import-module,jsiexecutor)
 $(call import-module,callinvoker)
 $(call import-module,reactperflogger)
 $(call import-module,hermes)
+$(call import-add-path, $(REACT_COMMON_DIR)/jsi)
+$(call import-module,v8runtime)
 $(call import-module,runtimeexecutor)
 $(call import-module,react/nativemodule/core)
 
@@ -144,6 +146,7 @@ include $(REACT_SRC_DIR)/common/mapbuffer/jni/Android.mk
 include $(REACT_SRC_DIR)/jscexecutor/Android.mk
 include $(REACT_SRC_DIR)/../hermes/reactexecutor/Android.mk
 include $(REACT_SRC_DIR)/../hermes/instrumentation/Android.mk
+include $(REACT_SRC_DIR)/../v8/reactexecutor/Android.mk
 include $(REACT_SRC_DIR)/modules/blob/jni/Android.mk
 
 include $(REACT_GENERATED_SRC_DIR)/codegen/jni/Android.mk
diff --git a/ReactCommon/cxxreact/Android.mk b/ReactCommon/cxxreact/Android.mk
index a502436..168813e 100644
--- a/ReactCommon/cxxreact/Android.mk
+++ b/ReactCommon/cxxreact/Android.mk
@@ -34,3 +34,4 @@ $(call import-module,jsi)
 $(call import-module,jsinspector)
 $(call import-module,hermes/inspector)
 $(call import-module,hermes/executor)
+$(call import-module,v8)
